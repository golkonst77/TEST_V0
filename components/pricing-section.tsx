"use client"

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Check, Star, ArrowRight } from "lucide-react"
import Link from "next/link"
import { QuizModalTariff } from "@/components/quiz-modal-tariff"
import { useCruiseClick } from "@/hooks/use-cruise-click"
import React from "react"

const ipPlans = [
  {
    name: "–ö—Ä—É–∏–∑-–ö–æ–Ω—Ç—Ä–æ–ª—å",
    price: "2 990",
    period: "–º–µ—Å",
    description: "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ò–ü –∏ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —Å–Ω—è—Ç—å —Å —Å–µ–±—è –±–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–ª–æ–≥–∞–º",
    popular: false,
    features: [
      "–í–µ–¥–µ–Ω–∏–µ –ö–£–î–∏–†",
      "–†–∞—Å—á–µ—Ç –∏ –ø–æ–¥–∞—á–∞ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–π",
      "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –Ω–∞–ª–æ–≥–∞–º",
      "–°–¥–∞—á–∞ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –≤ –§–ù–°",
      "–ë–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
    ],
  },
  {
    name: "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –ö—Ä—É–∏–∑",
    price: "4 990",
    period: "–º–µ—Å",
    description: "–õ—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π –∏ –ò–ü —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–∞ –≥–∏–±–∫–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –∫–∞–¥—Ä–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö",
    popular: true,
    features: [
      "–í—Å–µ –∏–∑ —Ç–∞—Ä–∏—Ñ–∞ –ö—Ä—É–∏–∑-–ö–æ–Ω—Ç—Ä–æ–ª—å",
      "–í–µ–¥–µ–Ω–∏–µ —É—á–µ—Ç–∞ –≤ 1–°",
      "–†–∞—Å—á–µ—Ç –≤–∑–Ω–æ—Å–æ–≤ –ò–ü",
      "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏",
      "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
      "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
    ],
  },
  {
    name: "–ü–æ–ª–Ω—ã–π –ê–≤—Ç–æ–ø–∏–ª–æ—Ç",
    price: "7 990",
    period: "–º–µ—Å",
    description: "–î–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π —Å–æ —Å–ª–æ–∂–Ω—ã–º —É—á–µ—Ç–æ–º, –í–≠–î –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏, —Ç—Ä–µ–±—É—é—â–∏–º–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
    popular: false,
    features: [
      "–í—Å–µ –∏–∑ —Ç–∞—Ä–∏—Ñ–∞ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –ö—Ä—É–∏–∑",
      "–í–µ–¥–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤–æ–≥–æ —É—á–µ—Ç–∞",
      "–†–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
      "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä",
      "–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏",
    ],
  },
]

const oooPlans = [
  {
    name: "–ö—Ä—É–∏–∑-–ö–æ–Ω—Ç—Ä–æ–ª—å",
    price: "8 990",
    period: "–º–µ—Å",
    description: "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –û–û–û –∏ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —Å–Ω—è—Ç—å —Å —Å–µ–±—è –±–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–ª–æ–≥–∞–º",
    popular: false,
    features: [
      "–í–µ–¥–µ–Ω–∏–µ –±—É—Ö—É—á–µ—Ç–∞",
      "–°–¥–∞—á–∞ –≤—Å–µ—Ö –æ—Ç—á–µ—Ç–æ–≤",
      "–†–∞—Å—á–µ—Ç –Ω–∞–ª–æ–≥–æ–≤",
      "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞",
      "–î–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç",
    ],
  },
  {
    name: "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –ö—Ä—É–∏–∑",
    price: "14 990",
    period: "–º–µ—Å",
    description: "–õ—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π –∏ –û–û–û —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–∞ –≥–∏–±–∫–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –∫–∞–¥—Ä–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö",
    popular: true,
    features: [
      "–í—Å–µ –∏–∑ —Ç–∞—Ä–∏—Ñ–∞ –ö—Ä—É–∏–∑-–ö–æ–Ω—Ç—Ä–æ–ª—å",
      "–ö–∞–¥—Ä–æ–≤–æ–µ –¥–µ–ª–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ",
      "–†–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã",
      "–û—Ç—á–µ—Ç—ã –≤ –ü–§–† –∏ –§–°–°",
      "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏",
      "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
    ],
  },
  {
    name: "–ü–æ–ª–Ω—ã–π –ê–≤—Ç–æ–ø–∏–ª–æ—Ç",
    price: "24 990",
    period: "–º–µ—Å",
    description: "–î–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π —Å–æ —Å–ª–æ–∂–Ω—ã–º —É—á–µ—Ç–æ–º, –í–≠–î –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏, —Ç—Ä–µ–±—É—é—â–∏–º–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
    popular: false,
    features: [
      "–í—Å–µ –∏–∑ —Ç–∞—Ä–∏—Ñ–∞ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –ö—Ä—É–∏–∑",
      "–£–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏–π —É—á–µ—Ç",
      "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
      "–ù–∞–ª–æ–≥–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä",
      "–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫",
    ],
  },
]

export function PricingSection() {
  const [quizOpen, setQuizOpen] = React.useState(false)
  const { handleCruiseClick } = useCruiseClick()

  return (
    <section className="py-8 bg-white">
      <style jsx global>{`
        @keyframes priceGlow {
          0%, 100% {
            color: rgb(17, 24, 39);
            text-shadow: 0 0 0 transparent;
            transform: scale(1);
          }
          50% {
            color: rgb(59, 130, 246);
            text-shadow: 0 0 15px rgba(59, 130, 246, 0.6);
            transform: scale(1.05);
          }
        }
        
        .price-animate {
          animation: priceGlow 2s ease-in-out infinite;
          display: inline-block;
        }
      `}</style>
      
      <div className="container mx-auto px-4">
        <div className="text-center mb-6">
          <h2 className="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl mb-4">
            –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–∂–∏–º ¬´–ö—Ä—É–∏–∑-–∫–æ–Ω—Ç—Ä–æ–ª—è¬ª
          </h2>
          <div className="flex justify-center w-full mb-6">
            <div className="px-6 py-3 rounded-xl shadow-lg bg-gradient-to-r from-blue-50 to-purple-50 text-base font-medium text-gray-900">
              –û—Ç –±–∞–∑–æ–≤–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–æ –ø–æ–ª–Ω–æ–≥–æ –∞–≤—Ç–æ–ø–∏–ª–æ—Ç–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ üöó
            </div>
          </div>
        </div>

        {/* –ò–ü –¢–∞—Ä–∏—Ñ—ã */}
        <div className="mb-10">
          <div className="text-center mb-4">
            <h3 className="text-2xl font-bold text-gray-900 mb-2">–¢–∞—Ä–∏—Ñ—ã –¥–ª—è –ò–ü</h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {ipPlans.map((plan, index) => (
              <Card
                key={index}
                className={`relative shadow-xl h-auto ${
                  plan.popular ? "border-2 border-blue-500 scale-105" : "border border-gray-200"
                }`}
              >
                {plan.popular && (
                  <Badge className="absolute -top-3 left-1/2 transform -translate-x-1/2 bg-blue-500">
                    <Star className="w-3 h-3 mr-1" />
                    –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä
                  </Badge>
                )}
                <CardHeader className="text-center">
                  <CardTitle className="text-xl">{plan.name}</CardTitle>
                  <CardDescription>{plan.description || "\u00A0"}</CardDescription>
                  <div className="mt-4">
                    <span className="text-4xl font-bold price-animate">{plan.price}</span>
                    <span className="text-gray-600 ml-2">‚ÇΩ/{plan.period}</span>
                  </div>
                </CardHeader>
                <CardContent className="flex flex-col px-6">
                  <ul className="space-y-3 max-h-[180px] overflow-auto">
                    {plan.features.map((feature, idx) => (
                      <li key={idx} className="flex items-start">
                        <Check className="h-5 w-5 text-green-500 mr-3 mt-0.5 flex-shrink-0" />
                        <span className="text-sm text-gray-700">{feature}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            ))}
          </div>
          {/* –ö–Ω–æ–ø–∫–∏ –ø–æ–¥ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –ò–ü */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 justify-items-center mt-8 mb-12 w-full">
            {ipPlans.map((plan, index) => (
              <Button
                key={index}
                size="lg"
                className={`w-full max-w-[320px] text-lg font-bold shadow-xl flex items-center justify-center rounded-xl px-8 py-4 transition-all duration-200 ${
                  plan.popular ? "bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white" : "bg-white border-2 border-blue-200 hover:border-blue-400 text-blue-900"
                }`}
                variant={plan.popular ? "default" : "outline"}
                onClick={() => setQuizOpen(true)}
              >
                –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ
                <ArrowRight className="ml-3 h-5 w-5" />
              </Button>
            ))}
          </div>
        </div>

        {/* –û–û–û –¢–∞—Ä–∏—Ñ—ã */}
        <div>
          <div className="text-center mb-4">
            <h3 className="text-2xl font-bold text-gray-900 mb-2">–¢–∞—Ä–∏—Ñ—ã –¥–ª—è –û–û–û</h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {oooPlans.map((plan, index) => (
              <Card
                key={index}
                className={`relative shadow-xl h-auto ${
                  plan.popular ? "border-2 border-blue-500 scale-105" : "border border-gray-200"
                }`}
              >
                {plan.popular && (
                  <Badge className="absolute -top-3 left-1/2 transform -translate-x-1/2 bg-blue-500">
                    <Star className="w-3 h-3 mr-1" />
                    –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä
                  </Badge>
                )}
                <CardHeader className="text-center">
                  <CardTitle className="text-xl">{plan.name}</CardTitle>
                  <CardDescription>{plan.description || "\u00A0"}</CardDescription>
                  <div className="mt-4">
                    <span className="text-4xl font-bold price-animate">{plan.price}</span>
                    <span className="text-gray-600 ml-2">‚ÇΩ/{plan.period}</span>
                  </div>
                </CardHeader>
                <CardContent className="flex flex-col px-6">
                  <ul className="space-y-3 max-h-[180px] overflow-auto">
                    {plan.features.map((feature, idx) => (
                      <li key={idx} className="flex items-start">
                        <Check className="h-5 w-5 text-green-500 mr-3 mt-0.5 flex-shrink-0" />
                        <span className="text-sm text-gray-700">{feature}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            ))}
          </div>
          {/* –ö–Ω–æ–ø–∫–∏ –ø–æ–¥ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –û–û–û */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 justify-items-center mt-8 mb-12 w-full">
            {oooPlans.map((plan, index) => (
              <Button
                key={index}
                size="lg"
                className={`w-full max-w-[320px] text-lg font-bold shadow-xl flex items-center justify-center rounded-xl px-8 py-4 transition-all duration-200 ${
                  plan.popular ? "bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white" : "bg-white border-2 border-blue-200 hover:border-blue-400 text-blue-900"
                }`}
                variant={plan.popular ? "default" : "outline"}
                onClick={() => setQuizOpen(true)}
              >
                –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ
                <ArrowRight className="ml-3 h-5 w-5" />
              </Button>
            ))}
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ */}
        <div 
          className="mt-20 rounded-2xl p-8 relative bg-cover bg-center bg-no-repeat"
          style={{
            backgroundImage: `linear-gradient(rgba(15, 23, 42, 0.85), rgba(30, 58, 138, 0.85)), url('/business-services-bg.jpg')`
          }}
        >
          <div className="relative z-10">
            <div className="text-center mb-8">
              <h3 className="text-2xl font-bold text-white mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏</h3>
              <p className="text-blue-100">–†–∞–∑–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <div className="text-center bg-white/30 backdrop-blur-sm rounded-lg p-6 border border-white/20 hover:bg-white/40 transition-all duration-300">
                <h4 className="font-semibold text-white mb-2">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ò–ü</h4>
                <p className="text-2xl font-bold text-blue-300 mb-2 price-animate">3 990 ‚ÇΩ<span className="text-blue-200 align-super text-base">*</span></p>
                <p className="text-sm text-blue-100">–ü–æ–¥ –∫–ª—é—á –∑–∞ 3 –¥–Ω—è</p>
              </div>
              <div className="text-center bg-white/30 backdrop-blur-sm rounded-lg p-6 border border-white/20 hover:bg-white/40 transition-all duration-300">
                <h4 className="font-semibold text-white mb-2">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –û–û–û</h4>
                <p className="text-2xl font-bold text-blue-300 mb-2 price-animate">9 990 ‚ÇΩ<span className="text-blue-200 align-super text-base">*</span></p>
                <p className="text-sm text-blue-100">–ü–æ–ª–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ</p>
              </div>
              <div className="text-center bg-white/30 backdrop-blur-sm rounded-lg p-6 border border-white/20 hover:bg-white/40 transition-all duration-300">
                <h4 className="font-semibold text-white mb-2">–ù–∞–ª–æ–≥–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</h4>
                <p className="text-2xl font-bold text-blue-300 mb-2 price-animate">2 500 ‚ÇΩ</p>
                <p className="text-sm text-blue-100">1 —á–∞—Å —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º</p>
              </div>
              <div className="text-center bg-white/30 backdrop-blur-sm rounded-lg p-6 border border-white/20 hover:bg-white/40 transition-all duration-300">
                <h4 className="font-semibold text-white mb-2">–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É—á–µ—Ç–∞</h4>
                <p className="text-2xl font-bold text-blue-300 mb-2 price-animate">–æ—Ç 15 000 ‚ÇΩ</p>
                <p className="text-sm text-blue-100">–ó–∞ –ø–µ—Ä–∏–æ–¥</p>
              </div>
            </div>
          </div>
          <div className="text-left text-sm font-bold text-white mt-4 ml-2">
            * –ù–ï –í–ó–ò–ú–ê–ï–¢–°–Ø –ø—Ä–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤.
          </div>
        </div>

        {/* CTA */}
        <div className="text-center mt-16">
          <h3 className="text-2xl font-bold text-gray-900 mb-4">–ù–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ?</h3>
          <p className="text-gray-600 mb-6">–ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</p>
          <Button
            size="lg"
            className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700"
            onClick={handleCruiseClick}
          >
            –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
          </Button>
        </div>

        <QuizModalTariff open={quizOpen} onOpenChange={setQuizOpen} />
      </div>
    </section>
  )
}
