"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Switch } from "@/components/ui/switch"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Slider } from "@/components/ui/slider"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { ArrowLeft, Save, Eye, RefreshCw } from "lucide-react"
import Link from "next/link"
import { useAdminAuth } from "@/hooks/use-admin-auth"

interface HeroConfig {
  badge: {
    text: string
    show: boolean
  }
  title: {
    text: string
    highlightText: string
  }
  description: string
  button: {
    text: string
    show: boolean
  }
  features: Array<{
    id: string
    title: string
    description: string
    icon: string
    color: string
    show: boolean
  }>
  background: {
    image: string
    overlay: number
  }
  layout: {
    alignment: string
    maxWidth: string
    marginLeft: number
    marginTop: number
    marginBottom: number
    paddingX: number
  }
}

export default function HomepageEditor() {
  const { isAuthenticated, isLoading } = useAdminAuth()
  const [config, setConfig] = useState<HeroConfig | null>(null)
  const [loading, setLoading] = useState(true)
  const [saving, setSaving] = useState(false)
  const [lastSaved, setLastSaved] = useState<string>("")

  useEffect(() => {
    if (isAuthenticated) {
      fetchConfig()
    }
  }, [isAuthenticated])

  const fetchConfig = async () => {
    console.log("–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    try {
      const response = await fetch("/api/admin/homepage")
      console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.status)

      if (response.ok) {
        const data = await response.json()
        console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data)
        setConfig(data.hero)
      } else {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞:", response.status)
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:", error)
    } finally {
      setLoading(false)
    }
  }

  const saveConfig = async () => {
    if (!config) return

    console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:", config)
    setSaving(true)

    try {
      const response = await fetch("/api/admin/homepage", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ hero: config }),
      })

      console.log("–û—Ç–≤–µ—Ç –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", response.status)

      if (response.ok) {
        const result = await response.json()
        console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", result)
        setLastSaved(new Date().toLocaleTimeString())
        alert("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
      } else {
        console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", response.status)
        alert("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", error)
      alert("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
    } finally {
      setSaving(false)
    }
  }

  const updateConfig = (path: string, value: any) => {
    if (!config) return

    console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ${path}:`, value)
    const newConfig = { ...config }
    const keys = path.split(".")
    let current: any = newConfig

    for (let i = 0; i < keys.length - 1; i++) {
      current = current[keys[i]]
    }
    current[keys[keys.length - 1]] = value

    setConfig(newConfig)
  }

  const updateFeature = (index: number, field: string, value: any) => {
    if (!config) return

    console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ ${index}, –ø–æ–ª–µ ${field}:`, value)
    const newFeatures = [...config.features]
    newFeatures[index] = { ...newFeatures[index], [field]: value }
    setConfig({ ...config, features: newFeatures })
  }

  if (isLoading || loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <RefreshCw className="h-8 w-8 animate-spin mx-auto mb-4 text-blue-600" />
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...</p>
        </div>
      </div>
    )
  }

  if (!isAuthenticated) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <h1 className="text-2xl font-bold mb-4">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h1>
          <p className="mb-4">–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</p>
          <Link href="/admin/login">
            <Button>–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</Button>
          </Link>
        </div>
      </div>
    )
  }

  if (!config) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <h1 className="text-2xl font-bold mb-4">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h1>
          <p className="mb-4">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</p>
          <Button onClick={fetchConfig}>–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</Button>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –®–∞–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ */}
      <div className="bg-white border-b shadow-sm">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Link href="/admin">
                <Button variant="ghost" size="sm">
                  <ArrowLeft className="h-4 w-4 mr-2" />
                  –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É
                </Button>
              </Link>
              <div>
                <h1 className="text-2xl font-bold">–†–µ–¥–∞–∫—Ç–æ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h1>
                {lastSaved && <p className="text-sm text-gray-500">–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {lastSaved}</p>}
              </div>
            </div>
            <div className="flex items-center space-x-2">
              <Link href="/" target="_blank">
                <Button variant="outline" size="sm">
                  <Eye className="h-4 w-4 mr-2" />
                  –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                </Button>
              </Link>
              <Button onClick={saveConfig} disabled={saving} className="bg-green-600 hover:bg-green-700">
                <Save className="h-4 w-4 mr-2" />
                {saving ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"}
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="container mx-auto px-4 py-8">
        <Tabs defaultValue="content" className="space-y-6">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="content">üìù –ö–æ–Ω—Ç–µ–Ω—Ç</TabsTrigger>
            <TabsTrigger value="features">üéØ –≠–ª–µ–º–µ–Ω—Ç—ã</TabsTrigger>
            <TabsTrigger value="design">üé® –î–∏–∑–∞–π–Ω</TabsTrigger>
            <TabsTrigger value="layout">üìê –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ</TabsTrigger>
          </TabsList>

          {/* –í–∫–ª–∞–¥–∫–∞ –ö–æ–Ω—Ç–µ–Ω—Ç */}
          <TabsContent value="content" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç</CardTitle>
                <CardDescription>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                {/* –ë–µ–π–¥–∂ */}
                <div className="space-y-3">
                  <div className="flex items-center space-x-2">
                    <Switch
                      checked={config.badge.show}
                      onCheckedChange={(checked) => updateConfig("badge.show", checked)}
                    />
                    <Label className="font-medium">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –±–µ–π–¥–∂</Label>
                  </div>
                  {config.badge.show && (
                    <div>
                      <Label htmlFor="badge-text">–¢–µ–∫—Å—Ç –±–µ–π–¥–∂–∞</Label>
                      <Input
                        id="badge-text"
                        value={config.badge.text}
                        onChange={(e) => updateConfig("badge.text", e.target.value)}
                        placeholder="–ó–∞—â–∏—â–∞–µ–º –≤–∞—à –±–∏–∑–Ω–µ—Å..."
                        className="mt-1"
                      />
                    </div>
                  )}
                </div>

                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="title-text">–û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫</Label>
                    <Input
                      id="title-text"
                      value={config.title.text}
                      onChange={(e) => updateConfig("title.text", e.target.value)}
                      placeholder="–í–∞—à –ª–∏—á–Ω—ã–π"
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label htmlFor="highlight-text">–í—ã–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ</Label>
                    <Input
                      id="highlight-text"
                      value={config.title.highlightText}
                      onChange={(e) => updateConfig("title.highlightText", e.target.value)}
                      placeholder="—â–∏—Ç"
                      className="mt-1"
                    />
                  </div>
                </div>

                {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                <div>
                  <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ</Label>
                  <Textarea
                    id="description"
                    value={config.description}
                    onChange={(e) => updateConfig("description", e.target.value)}
                    placeholder="–ü–æ–∫–∞ –≤—ã —Å—Ç—Ä–æ–∏—Ç–µ —Å–≤–æ—é –∏–º–ø–µ—Ä–∏—é..."
                    rows={4}
                    className="mt-1"
                  />
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ */}
                <div className="space-y-3">
                  <div className="flex items-center space-x-2">
                    <Switch
                      checked={config.button.show}
                      onCheckedChange={(checked) => updateConfig("button.show", checked)}
                    />
                    <Label className="font-medium">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É</Label>
                  </div>
                  {config.button.show && (
                    <div>
                      <Label htmlFor="button-text">–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏</Label>
                      <Input
                        id="button-text"
                        value={config.button.text}
                        onChange={(e) => updateConfig("button.text", e.target.value)}
                        placeholder="–•–æ—á—É –Ω–∞ –∫—Ä—É–∏–∑ –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤"
                        className="mt-1"
                      />
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* –í–∫–ª–∞–¥–∫–∞ –≠–ª–µ–º–µ–Ω—Ç—ã */}
          <TabsContent value="features" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>–≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã</CardTitle>
                <CardDescription>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∫–æ–Ω–æ–∫ –∏ –±–ª–æ–∫–æ–≤</CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                {config.features.map((feature, index) => (
                  <Card key={feature.id} className="p-4 border-l-4 border-l-blue-500">
                    <div className="space-y-4">
                      <div className="flex items-center justify-between">
                        <h4 className="font-medium text-lg">
                          {feature.title} ({feature.id})
                        </h4>
                        <Switch
                          checked={feature.show}
                          onCheckedChange={(checked) => updateFeature(index, "show", checked)}
                        />
                      </div>

                      {feature.show && (
                        <div className="grid grid-cols-2 gap-4">
                          <div>
                            <Label>–ó–∞–≥–æ–ª–æ–≤–æ–∫</Label>
                            <Input
                              value={feature.title}
                              onChange={(e) => updateFeature(index, "title", e.target.value)}
                              className="mt-1"
                            />
                          </div>
                          <div>
                            <Label>–¶–≤–µ—Ç</Label>
                            <Select
                              value={feature.color}
                              onValueChange={(value) => updateFeature(index, "color", value)}
                            >
                              <SelectTrigger className="mt-1">
                                <SelectValue />
                              </SelectTrigger>
                              <SelectContent>
                                <SelectItem value="red">üî¥ –ö—Ä–∞—Å–Ω—ã–π</SelectItem>
                                <SelectItem value="orange">üü† –û—Ä–∞–Ω–∂–µ–≤—ã–π</SelectItem>
                                <SelectItem value="green">üü¢ –ó–µ–ª–µ–Ω—ã–π</SelectItem>
                                <SelectItem value="blue">üîµ –°–∏–Ω–∏–π</SelectItem>
                                <SelectItem value="purple">üü£ –§–∏–æ–ª–µ—Ç–æ–≤—ã–π</SelectItem>
                              </SelectContent>
                            </Select>
                          </div>
                          <div className="col-span-2">
                            <Label>–û–ø–∏—Å–∞–Ω–∏–µ</Label>
                            <Textarea
                              value={feature.description}
                              onChange={(e) => updateFeature(index, "description", e.target.value)}
                              rows={2}
                              className="mt-1"
                            />
                          </div>
                        </div>
                      )}
                    </div>
                  </Card>
                ))}
              </CardContent>
            </Card>
          </TabsContent>

          {/* –í–∫–ª–∞–¥–∫–∞ –î–∏–∑–∞–π–Ω */}
          <TabsContent value="design" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>–î–∏–∑–∞–π–Ω –∏ —Ñ–æ–Ω</CardTitle>
                <CardDescription>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞</CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div>
                  <Label htmlFor="bg-image">URL —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</Label>
                  <Input
                    id="bg-image"
                    value={config.background.image}
                    onChange={(e) => updateConfig("background.image", e.target.value)}
                    placeholder="/hero-bg.jpg"
                    className="mt-1"
                  />
                  <p className="text-sm text-gray-500 mt-1">–¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {config.background.image}</p>
                </div>

                <div>
                  <Label>–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å overlay: {config.background.overlay}%</Label>
                  <Slider
                    value={[config.background.overlay]}
                    onValueChange={(value) => updateConfig("background.overlay", value[0])}
                    max={100}
                    step={5}
                    className="w-full mt-2"
                  />
                  <div className="flex justify-between text-sm text-gray-500 mt-1">
                    <span>–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π</span>
                    <span>–ù–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* –í–∫–ª–∞–¥–∫–∞ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ */}
          <TabsContent value="layout" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</CardTitle>
                <CardDescription>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div>
                  <Label>–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ</Label>
                  <Select
                    value={config.layout.alignment}
                    onValueChange={(value) => updateConfig("layout.alignment", value)}
                  >
                    <SelectTrigger className="mt-1">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="left">‚¨ÖÔ∏è –°–ª–µ–≤–∞</SelectItem>
                      <SelectItem value="center">‚¨ÜÔ∏è –ü–æ —Ü–µ–Ω—Ç—Ä—É</SelectItem>
                      <SelectItem value="right">‚û°Ô∏è –°–ø—Ä–∞–≤–∞</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <Label>–û—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞: {config.layout.marginLeft}px</Label>
                  <Slider
                    value={[config.layout.marginLeft]}
                    onValueChange={(value) => updateConfig("layout.marginLeft", value[0])}
                    max={300}
                    step={10}
                    className="w-full mt-2"
                  />
                </div>

                <div>
                  <Label>–û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É: {config.layout.marginTop}px</Label>
                  <Slider
                    value={[config.layout.marginTop]}
                    onValueChange={(value) => updateConfig("layout.marginTop", value[0])}
                    max={200}
                    step={10}
                    className="w-full mt-2"
                  />
                </div>

                <div>
                  <Label>–û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É: {config.layout.marginBottom}px</Label>
                  <Slider
                    value={[config.layout.marginBottom]}
                    onValueChange={(value) => updateConfig("layout.marginBottom", value[0])}
                    max={200}
                    step={10}
                    className="w-full mt-2"
                  />
                </div>

                <div>
                  <Label>–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã: {config.layout.paddingX}px</Label>
                  <Slider
                    value={[config.layout.paddingX]}
                    onValueChange={(value) => updateConfig("layout.paddingX", value[0])}
                    max={100}
                    step={5}
                    className="w-full mt-2"
                  />
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>

        {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <Card className="mt-8 bg-gray-50">
          <CardHeader>
            <CardTitle className="text-sm">üîß –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-xs space-y-2">
              <p>
                <strong>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</strong> {config.title.text} "{config.title.highlightText}"
              </p>
              <p>
                <strong>–ö–Ω–æ–ø–∫–∞:</strong> {config.button.show ? config.button.text : "–°–∫—Ä—ã—Ç–∞"}
              </p>
              <p>
                <strong>–û—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞:</strong> {config.layout.marginLeft}px
              </p>
              <p>
                <strong>–ê–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:</strong> {config.features.filter((f) => f.show).length} –∏–∑{" "}
                {config.features.length}
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
